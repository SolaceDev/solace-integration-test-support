<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.solace.test.integration</groupId>
		<artifactId>solace-integration-test-support</artifactId>
		<version>0.2.1-SNAPSHOT</version>
	</parent>

	<artifactId>solace-semp-v2-client</artifactId>
	<packaging>jar</packaging>

	<name>Solace SEMP V2 Client</name>
	<description>Generated Solace SEMP V2 wrapper and client</description>
	<url>https://github.com/${repoName}/solace-integration-test-support/tree/${project.scm.tag}/semp-client</url>

	<properties>
		<swagger-annotations-version>1.5.21</swagger-annotations-version>
		<jersey-version>2.29.1</jersey-version>
		<jackson-version>2.12.1</jackson-version>
		<jodatime-version>2.7</jodatime-version>
	</properties>

	<dependencies>
		<!-- dependencies are needed for the client being generated -->

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations-version}</version>
		</dependency>

		<!-- You can find the dependencies for the library configuation you chose by looking in JavaClientCodegen.
			 Then find the corresponding dependency on Maven Central, and set the versions in the property section below -->

		<!-- HTTP client: jersey-client -->
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${jersey-version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey-version}</version>
		</dependency>

		<!-- JSON processing: jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-base</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- Joda time: if you use it -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${jodatime-version}</version>
		</dependency>

		<!-- Base64 encoding that works in both JVM and Android -->
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>2.2</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<!-- workaround for generateApiTests=false in swagger-codegen-maven-plugin not working -->
						<exclude>**/*ApiTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<id>generate-semp-action-api</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/semp-v2-swagger-action.json</inputSpec>
							<output>${project.build.directory}/generated-sources/swagger</output>
							<language>java</language>
							<apiPackage>com.solace.test.integration.semp.v2.action.api</apiPackage>
							<modelPackage>com.solace.test.integration.semp.v2.action.model</modelPackage>
							<library>jersey2</library>
							<generateApiTests>false</generateApiTests>
							<modelNamePrefix>Action</modelNamePrefix>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<interfaceOnly>true</interfaceOnly>
								<useTags>true</useTags>
								<dateLibrary>joda</dateLibrary>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-semp-config-api</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/semp-v2-swagger-config.json</inputSpec>
							<output>${project.build.directory}/generated-sources/swagger</output>
							<language>java</language>
							<apiPackage>com.solace.test.integration.semp.v2.config.api</apiPackage>
							<modelPackage>com.solace.test.integration.semp.v2.config.model</modelPackage>
							<library>jersey2</library>
							<generateApiTests>false</generateApiTests>
							<modelNamePrefix>Config</modelNamePrefix>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<interfaceOnly>true</interfaceOnly>
								<useTags>true</useTags>
								<dateLibrary>joda</dateLibrary>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-semp-monitor-api</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/semp-v2-swagger-monitor.json</inputSpec>
							<output>${project.build.directory}/generated-sources/swagger</output>
							<language>java</language>
							<apiPackage>com.solace.test.integration.semp.v2.monitor.api</apiPackage>
							<modelPackage>com.solace.test.integration.semp.v2.monitor.model</modelPackage>
							<library>jersey2</library>
							<generateApiTests>false</generateApiTests>
							<modelNamePrefix>Monitor</modelNamePrefix>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<interfaceOnly>true</interfaceOnly>
								<useTags>true</useTags>
								<dateLibrary>joda</dateLibrary>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/target/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
